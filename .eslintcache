[{"/Users/ishansengupta/Desktop/shader/shaders/src/index.js":"1","/Users/ishansengupta/Desktop/shader/shaders/src/App.js":"2","/Users/ishansengupta/Desktop/shader/shaders/src/Scene.js":"3","/Users/ishansengupta/Desktop/shader/shaders/src/shaders/vertex.js":"4","/Users/ishansengupta/Desktop/shader/shaders/src/shaders/fragment.js":"5"},{"size":147,"mtime":1608398172649,"results":"6","hashOfConfig":"7"},{"size":546,"mtime":1608435443234,"results":"8","hashOfConfig":"7"},{"size":5342,"mtime":1608435025644,"results":"9","hashOfConfig":"7"},{"size":290,"mtime":1608405725158,"results":"10","hashOfConfig":"7"},{"size":6035,"mtime":1608434070644,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1ttk6b8",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ishansengupta/Desktop/shader/shaders/src/index.js",[],["25","26"],"/Users/ishansengupta/Desktop/shader/shaders/src/App.js",["27"],"import \"./styles.css\";\nimport Scene from \"./Scene\";\n\nfunction App() {\n  return (\n    <>\n      <div class=\"frame\">\n        <h1 class=\"frame__title\">\n          WEBGL Neon Shader\n          \n        </h1>\n      \n        <div class=\"frame__links\">\n          <a href=\"https://isengupt.github.io/fiber-website/\">\n            Previous\n          </a>\n          <a href=\"#\">Resume</a>\n          <a href=\"https://github.com/isengupt/shader\">\n            GitHub\n          </a>\n        </div>\n      </div>\n\n      <Scene />\n    </>\n  );\n}\n\nexport default App;\n","/Users/ishansengupta/Desktop/shader/shaders/src/Scene.js",["28","29","30","31","32"],"import React, { Component } from \"react\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport DatGui, { DatNumber } from \"@tim-soft/react-dat-gui\";\nimport { EffectComposer } from \"three/examples/jsm/postprocessing/EffectComposer.js\";\nimport { RenderPass } from \"three/examples/jsm/postprocessing/RenderPass.js\";\nimport { UnrealBloomPass } from \"three/examples/jsm/postprocessing/UnrealBloomPass.js\";\nimport model from \"./model/scene.glb\";\nimport { vertex } from \"./shaders/vertex\";\nimport { fragment } from \"./shaders/fragment\";\nimport sky from \"./model/11.jpg\";\n\nconst params = {\n  exposure: 1,\n  bloomStrength: 1.5,\n  bloomThreshold: 0,\n  bloomRadius: 0\n};\n\nclass Scene extends Component {\n  constructor(props) {\n    super(props);\n\n    this.start = this.start.bind(this);\n    this.stop = this.stop.bind(this);\n    this.animate = this.animate.bind(this);\n  }\n\n  componentDidMount() {\n    this.scene = new THREE.Scene();\n    this.width = this.mount.clientWidth;\n    this.height = this.mount.clientHeight;\n\n\n    this.camera = new THREE.PerspectiveCamera(\n      45,\n      this.width / this.height,\n      0.1,\n      1000\n    );\n    this.renderer = new THREE.WebGLRenderer();\n    this.renderer.setSize(this.width, this.height);\n    this.renderer.setClearColor(0x000000, 1);\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.physicallyCorrectLights = true;\n    this.renderer.toneMapping = THREE.ReinhardToneMapping;\n    this.time = 0;\n\n    this.camera.position.set(0, 0, 7);\n    this.mount.appendChild(this.renderer.domElement);\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n\n    this.loader = new GLTFLoader();\n\n    this.renderpass = new RenderPass( this.scene, this.camera );\n\n \n    this.bloomPass = new UnrealBloomPass( new THREE.Vector2( this.width,this.height ), 1.5, 0.4, 0.85 );\n    this.bloomPass.threshold = params.bloomThreshold;\n    this.bloomPass.strength = params.bloomStrength;\n    this.bloomPass.radius = params.bloomRadius;\n\n    this.composer = new EffectComposer( this.renderer );\n    this.composer.addPass( this.renderpass );\n    this.composer.addPass( this.bloomPass );\n \n    this.loader.load(model, (gltf) => {\n      console.log(gltf);\n      this.scene.add(gltf.scene);\n   \n      gltf.scene.position.y =-2.5\n      gltf.scene.position.x = 0.5\n\n      gltf.scene.rotateY(Math.PI / 12);\n      gltf.scene.rotateX(Math.PI / 12)\n      //gltf.scene.rotateX(Math.PI / 4);\n      /*       \n      gltf.scene.rotateY(0.55)\n      gltf.scene.rotateZ(-0.1) */\n      gltf.scene.traverse((o) => {\n        if (o.isMesh) {\n          o.geometry.center();\n          o.scale.set(1.25, 1.25, 1.25);\n          o.material = this.material;\n\n          console.log(o);\n        }\n      });\n    });\n\n    /*  this.scene = scene\n    this.camera = camera\n    this.renderer = renderer\n    this.material = material\n    this.cube = cube */\n    this.addObjects();\n    this.resize();\n    this.animate();\n    this.setupResize();\n  }\n\n  addObjects() {\n    let that = this;\n    this.material = new THREE.ShaderMaterial({\n      fragmentShader: fragment,\n      vertexShader: vertex,\n      extensions: {\n        derivatives: \"#extension GL_OES_standard_derivatives : enable\",\n      },\n      side: THREE.DoubleSide,\n      uniforms: {\n        time: { type: \"f\", value: 0 },\n        sky: { type: \"f\", value: new THREE.TextureLoader().load(sky) },\n        resolution: { type: \"v4\", value: new THREE.Vector4() },\n        uvRate: {\n          value: new THREE.Vector2(1, 1),\n        },\n      },\n    });\n\n    this.geometry = new THREE.PlaneGeometry(1, 1, 1, 1);\n    this.plane = new THREE.Mesh(this.geometry, this.material);\n\n    //this.scene.add(this.plane);\n    const light = new THREE.AmbientLight( 0x404040 );\n    this.scene.add( light );\n  }\n\n  setupResize() {\n    this.mount.addEventListener(\"resize\", this.resize.bind(this));\n  }\n\n  resize() {\n    this.width = this.mount.offsetWidth;\n    this.height = this.mount.offsetHeight;\n    this.renderer.setSize(this.width, this.height);\n    this.camera.aspect = this.width / this.height;\n\n    this.imageAspect = 853 / 1280;\n    let a1;\n    let a2;\n    if (this.height / this.width > this.imageAspect) {\n      a1 = (this.width / this.height) * this.imageAspect;\n      a1 = 1;\n    } else {\n      a1 = 1;\n      a2 = this.height / this.width / this.imageAspect;\n    }\n    this.camera.updateProjectionMatrix();\n  }\n\n  componentWillUnmount() {\n    this.stop();\n    this.mount.removeChild(this.renderer.domElement);\n  }\n\n  start() {\n    if (!this.frameId) {\n      this.frameId = requestAnimationFrame(this.animate);\n    }\n  }\n\n  stop() {\n    cancelAnimationFrame(this.frameId);\n  }\n\n  animate() {\n    //this.cube.rotation.x += 0.01\n    //this.cube.rotation.y += 0.01\n    this.time += 0.05;\n    //console.log(this.time)\n    this.material.uniforms.time.value = this.time;\n\n    this.frameId = window.requestAnimationFrame(this.animate.bind(this));\n    this.renderScene();\n  }\n\n  renderScene() {\n    this.renderer.render(this.scene, this.camera);\n  }\n\n  render() {\n    return (\n      <div\n        style={{ width: \"100vw\", height: \"100vh\" }}\n        ref={(mount) => {\n          this.mount = mount;\n        }}\n      />\n    );\n  }\n}\n\nexport default Scene;\n","/Users/ishansengupta/Desktop/shader/shaders/src/shaders/vertex.js",[],"/Users/ishansengupta/Desktop/shader/shaders/src/shaders/fragment.js",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":17,"column":11,"nodeType":"39","endLine":17,"endColumn":23},{"ruleId":"40","severity":1,"message":"41","line":5,"column":8,"nodeType":"42","messageId":"43","endLine":5,"endColumn":14},{"ruleId":"40","severity":1,"message":"44","line":5,"column":18,"nodeType":"42","messageId":"43","endLine":5,"endColumn":27},{"ruleId":"40","severity":1,"message":"45","line":104,"column":9,"nodeType":"42","messageId":"43","endLine":104,"endColumn":13},{"ruleId":"40","severity":1,"message":"46","line":147,"column":7,"nodeType":"42","messageId":"43","endLine":147,"endColumn":9},{"ruleId":"40","severity":1,"message":"47","line":148,"column":7,"nodeType":"42","messageId":"43","endLine":148,"endColumn":9},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'DatGui' is defined but never used.","Identifier","unusedVar","'DatNumber' is defined but never used.","'that' is assigned a value but never used.","'a1' is assigned a value but never used.","'a2' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]