(this.webpackJsonpshaders=this.webpackJsonpshaders||[]).push([[0],{120:function(e,n,t){},261:function(e,n,t){"use strict";t.r(n);var i=t(8),s=t(1),r=t(67),g=t.n(r),o=(t(120),t(2)),a=t(5),c=t(13),v=t(3),h=t(4),f=t(0),d=t(107),y=t(108),m=(t(121),t(113)),x=t(112),l=t(114),w=t.p+"static/media/scene.003cc221.glb",z=t.p+"static/media/11.fdb5fed8.jpg",u=1.5,p=0,P=0,b=function(e){Object(v.a)(t,e);var n=Object(h.a)(t);function t(e){var i;return Object(o.a)(this,t),(i=n.call(this,e)).start=i.start.bind(Object(c.a)(i)),i.stop=i.stop.bind(Object(c.a)(i)),i.animate=i.animate.bind(Object(c.a)(i)),i}return Object(a.a)(t,[{key:"componentDidMount",value:function(){var e=this;this.scene=new f.ib,this.width=this.mount.clientWidth,this.height=this.mount.clientHeight,this.camera=new f.V(45,this.width/this.height,.1,1e3),this.renderer=new f.Ab,this.renderer.setSize(this.width,this.height),this.renderer.setClearColor(0,1),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.physicallyCorrectLights=!0,this.renderer.toneMapping=f.gb,this.time=0,this.camera.position.set(0,0,7),this.mount.appendChild(this.renderer.domElement),this.controls=new d.a(this.camera,this.renderer.domElement),this.loader=new y.a,this.renderpass=new x.a(this.scene,this.camera),this.bloomPass=new l.a(new f.vb(this.width,this.height),1.5,.4,.85),this.bloomPass.threshold=p,this.bloomPass.strength=u,this.bloomPass.radius=P,this.composer=new m.a(this.renderer),this.composer.addPass(this.renderpass),this.composer.addPass(this.bloomPass),this.loader.load(w,(function(n){console.log(n),e.scene.add(n.scene),n.scene.position.y=-2.5,n.scene.position.x=.5,n.scene.rotateY(Math.PI/12),n.scene.rotateX(Math.PI/12),n.scene.traverse((function(n){n.isMesh&&(n.geometry.center(),n.scale.set(1.25,1.25,1.25),n.material=e.material,console.log(n))}))})),this.addObjects(),this.resize(),this.animate(),this.setupResize()}},{key:"addObjects",value:function(){this.material=new f.jb({fragmentShader:"\n\nuniform float time;\nuniform float progress;\nuniform sampler2D sky;\nuniform vec4 resolution;\nvarying vec2 vUv;\nvarying vec3 vPosition;\nvarying vec3 vNormal;\nfloat PI = 3.14159265358979;\n\n\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\nvec4 fade(vec4 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\n\n// Classic Perlin noise, periodic version\nfloat cnoise(vec4 P, vec4 rep){\n  vec4 Pi0 = mod(floor(P), rep); // Integer part modulo rep\n  vec4 Pi1 = mod(Pi0 + 1.0, rep); // Integer part + 1 mod rep\n  vec4 Pf0 = fract(P); // Fractional part for interpolation\n  vec4 Pf1 = Pf0 - 1.0; // Fractional part - 1.0\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = vec4(Pi0.zzzz);\n  vec4 iz1 = vec4(Pi1.zzzz);\n  vec4 iw0 = vec4(Pi0.wwww);\n  vec4 iw1 = vec4(Pi1.wwww);\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n  vec4 ixy00 = permute(ixy0 + iw0);\n  vec4 ixy01 = permute(ixy0 + iw1);\n  vec4 ixy10 = permute(ixy1 + iw0);\n  vec4 ixy11 = permute(ixy1 + iw1);\n\n  vec4 gx00 = ixy00 / 7.0;\n  vec4 gy00 = floor(gx00) / 7.0;\n  vec4 gz00 = floor(gy00) / 6.0;\n  gx00 = fract(gx00) - 0.5;\n  gy00 = fract(gy00) - 0.5;\n  gz00 = fract(gz00) - 0.5;\n  vec4 gw00 = vec4(0.75) - abs(gx00) - abs(gy00) - abs(gz00);\n  vec4 sw00 = step(gw00, vec4(0.0));\n  gx00 -= sw00 * (step(0.0, gx00) - 0.5);\n  gy00 -= sw00 * (step(0.0, gy00) - 0.5);\n\n  vec4 gx01 = ixy01 / 7.0;\n  vec4 gy01 = floor(gx01) / 7.0;\n  vec4 gz01 = floor(gy01) / 6.0;\n  gx01 = fract(gx01) - 0.5;\n  gy01 = fract(gy01) - 0.5;\n  gz01 = fract(gz01) - 0.5;\n  vec4 gw01 = vec4(0.75) - abs(gx01) - abs(gy01) - abs(gz01);\n  vec4 sw01 = step(gw01, vec4(0.0));\n  gx01 -= sw01 * (step(0.0, gx01) - 0.5);\n  gy01 -= sw01 * (step(0.0, gy01) - 0.5);\n\n  vec4 gx10 = ixy10 / 7.0;\n  vec4 gy10 = floor(gx10) / 7.0;\n  vec4 gz10 = floor(gy10) / 6.0;\n  gx10 = fract(gx10) - 0.5;\n  gy10 = fract(gy10) - 0.5;\n  gz10 = fract(gz10) - 0.5;\n  vec4 gw10 = vec4(0.75) - abs(gx10) - abs(gy10) - abs(gz10);\n  vec4 sw10 = step(gw10, vec4(0.0));\n  gx10 -= sw10 * (step(0.0, gx10) - 0.5);\n  gy10 -= sw10 * (step(0.0, gy10) - 0.5);\n\n  vec4 gx11 = ixy11 / 7.0;\n  vec4 gy11 = floor(gx11) / 7.0;\n  vec4 gz11 = floor(gy11) / 6.0;\n  gx11 = fract(gx11) - 0.5;\n  gy11 = fract(gy11) - 0.5;\n  gz11 = fract(gz11) - 0.5;\n  vec4 gw11 = vec4(0.75) - abs(gx11) - abs(gy11) - abs(gz11);\n  vec4 sw11 = step(gw11, vec4(0.0));\n  gx11 -= sw11 * (step(0.0, gx11) - 0.5);\n  gy11 -= sw11 * (step(0.0, gy11) - 0.5);\n\n  vec4 g0000 = vec4(gx00.x,gy00.x,gz00.x,gw00.x);\n  vec4 g1000 = vec4(gx00.y,gy00.y,gz00.y,gw00.y);\n  vec4 g0100 = vec4(gx00.z,gy00.z,gz00.z,gw00.z);\n  vec4 g1100 = vec4(gx00.w,gy00.w,gz00.w,gw00.w);\n  vec4 g0010 = vec4(gx10.x,gy10.x,gz10.x,gw10.x);\n  vec4 g1010 = vec4(gx10.y,gy10.y,gz10.y,gw10.y);\n  vec4 g0110 = vec4(gx10.z,gy10.z,gz10.z,gw10.z);\n  vec4 g1110 = vec4(gx10.w,gy10.w,gz10.w,gw10.w);\n  vec4 g0001 = vec4(gx01.x,gy01.x,gz01.x,gw01.x);\n  vec4 g1001 = vec4(gx01.y,gy01.y,gz01.y,gw01.y);\n  vec4 g0101 = vec4(gx01.z,gy01.z,gz01.z,gw01.z);\n  vec4 g1101 = vec4(gx01.w,gy01.w,gz01.w,gw01.w);\n  vec4 g0011 = vec4(gx11.x,gy11.x,gz11.x,gw11.x);\n  vec4 g1011 = vec4(gx11.y,gy11.y,gz11.y,gw11.y);\n  vec4 g0111 = vec4(gx11.z,gy11.z,gz11.z,gw11.z);\n  vec4 g1111 = vec4(gx11.w,gy11.w,gz11.w,gw11.w);\n\n  vec4 norm00 = taylorInvSqrt(vec4(dot(g0000, g0000), dot(g0100, g0100), dot(g1000, g1000), dot(g1100, g1100)));\n  g0000 *= norm00.x;\n  g0100 *= norm00.y;\n  g1000 *= norm00.z;\n  g1100 *= norm00.w;\n\n  vec4 norm01 = taylorInvSqrt(vec4(dot(g0001, g0001), dot(g0101, g0101), dot(g1001, g1001), dot(g1101, g1101)));\n  g0001 *= norm01.x;\n  g0101 *= norm01.y;\n  g1001 *= norm01.z;\n  g1101 *= norm01.w;\n\n  vec4 norm10 = taylorInvSqrt(vec4(dot(g0010, g0010), dot(g0110, g0110), dot(g1010, g1010), dot(g1110, g1110)));\n  g0010 *= norm10.x;\n  g0110 *= norm10.y;\n  g1010 *= norm10.z;\n  g1110 *= norm10.w;\n\n  vec4 norm11 = taylorInvSqrt(vec4(dot(g0011, g0011), dot(g0111, g0111), dot(g1011, g1011), dot(g1111, g1111)));\n  g0011 *= norm11.x;\n  g0111 *= norm11.y;\n  g1011 *= norm11.z;\n  g1111 *= norm11.w;\n\n  float n0000 = dot(g0000, Pf0);\n  float n1000 = dot(g1000, vec4(Pf1.x, Pf0.yzw));\n  float n0100 = dot(g0100, vec4(Pf0.x, Pf1.y, Pf0.zw));\n  float n1100 = dot(g1100, vec4(Pf1.xy, Pf0.zw));\n  float n0010 = dot(g0010, vec4(Pf0.xy, Pf1.z, Pf0.w));\n  float n1010 = dot(g1010, vec4(Pf1.x, Pf0.y, Pf1.z, Pf0.w));\n  float n0110 = dot(g0110, vec4(Pf0.x, Pf1.yz, Pf0.w));\n  float n1110 = dot(g1110, vec4(Pf1.xyz, Pf0.w));\n  float n0001 = dot(g0001, vec4(Pf0.xyz, Pf1.w));\n  float n1001 = dot(g1001, vec4(Pf1.x, Pf0.yz, Pf1.w));\n  float n0101 = dot(g0101, vec4(Pf0.x, Pf1.y, Pf0.z, Pf1.w));\n  float n1101 = dot(g1101, vec4(Pf1.xy, Pf0.z, Pf1.w));\n  float n0011 = dot(g0011, vec4(Pf0.xy, Pf1.zw));\n  float n1011 = dot(g1011, vec4(Pf1.x, Pf0.y, Pf1.zw));\n  float n0111 = dot(g0111, vec4(Pf0.x, Pf1.yzw));\n  float n1111 = dot(g1111, Pf1);\n\n  vec4 fade_xyzw = fade(Pf0);\n  vec4 n_0w = mix(vec4(n0000, n1000, n0100, n1100), vec4(n0001, n1001, n0101, n1101), fade_xyzw.w);\n  vec4 n_1w = mix(vec4(n0010, n1010, n0110, n1110), vec4(n0011, n1011, n0111, n1111), fade_xyzw.w);\n  vec4 n_zw = mix(n_0w, n_1w, fade_xyzw.z);\n  vec2 n_yzw = mix(n_zw.xy, n_zw.zw, fade_xyzw.y);\n  float n_xyzw = mix(n_yzw.x, n_yzw.y, fade_xyzw.x);\n  return 2.2 * n_xyzw;\n}\n\nvoid main()\t{\n    \n    float diff = dot(vec3(1.), vNormal);\n\n    float phi = acos(vNormal.y);\n\n    float angle = atan(vNormal.x, vNormal.z);\n\n    vec2 newFakeUV = vec2((angle * PI) / (2. * PI), phi/PI);\n    \n\n    float fresnel = abs(dot(cameraPosition, vNormal));\n    fresnel = fresnel * fresnel ;\n    vec2 fakeUV = vec2(dot(vec3(1), vNormal),dot(vec3(-1.,0.,1.), vNormal));\n    \n    fakeUV = fract(fakeUV + vec2(time/40., time/2.));\n   \n    vec4 txt = texture2D(sky,newFakeUV + 0.2*cnoise(vec4(fakeUV*5., time/100.,0.), vec4(5.)));\n\n    gl_FragColor = vec4(mix(vec3(1.),txt.rgb,fresnel),1.);\n   \n    \n\n}\n",vertexShader:"\n\nuniform float time;\nvarying vec2 vUv;\nvarying vec3 vPosition;\nvarying vec3 vNormal;\nuniform vec2 pixels;\n\nfloat PI = 3.141592653589793238;\n\n\nvoid main()\t{\n    vUv = uv;\nvNormal = normal;\n   gl_Position = projectionMatrix * modelViewMatrix * vec4 (position, 1.0);\n\n}\n",extensions:{derivatives:"#extension GL_OES_standard_derivatives : enable"},side:f.m,uniforms:{time:{type:"f",value:0},sky:{type:"f",value:(new f.rb).load(z)},resolution:{type:"v4",value:new f.xb},uvRate:{value:new f.vb(1,1)}}}),this.geometry=new f.X(1,1,1,1),this.plane=new f.K(this.geometry,this.material);var e=new f.b(4210752);this.scene.add(e)}},{key:"setupResize",value:function(){this.mount.addEventListener("resize",this.resize.bind(this))}},{key:"resize",value:function(){this.width=this.mount.offsetWidth,this.height=this.mount.offsetHeight,this.renderer.setSize(this.width,this.height),this.camera.aspect=this.width/this.height,this.imageAspect=853/1280,this.height/this.width>this.imageAspect?this.width/this.height*this.imageAspect:(1,this.height,this.width,this.imageAspect),this.camera.updateProjectionMatrix()}},{key:"componentWillUnmount",value:function(){this.stop(),this.mount.removeChild(this.renderer.domElement)}},{key:"start",value:function(){this.frameId||(this.frameId=requestAnimationFrame(this.animate))}},{key:"stop",value:function(){cancelAnimationFrame(this.frameId)}},{key:"animate",value:function(){this.time+=.05,this.material.uniforms.time.value=this.time,this.frameId=window.requestAnimationFrame(this.animate.bind(this)),this.renderScene()}},{key:"renderScene",value:function(){this.renderer.render(this.scene,this.camera)}},{key:"render",value:function(){var e=this;return Object(i.jsx)("div",{style:{width:"100vw",height:"100vh"},ref:function(n){e.mount=n}})}}]),t}(s.Component);var j=function(){return Object(i.jsxs)(i.Fragment,{children:[Object(i.jsxs)("div",{class:"frame",children:[Object(i.jsx)("h1",{class:"frame__title",children:"WEBGL Neon Shader"}),Object(i.jsxs)("div",{class:"frame__links",children:[Object(i.jsx)("a",{href:"https://isengupt.github.io/fiber-website/",children:"Previous"}),Object(i.jsx)("a",{href:"#",children:"Resume"}),Object(i.jsx)("a",{href:"https://github.com/isengupt/shader",children:"GitHub"})]})]}),Object(i.jsx)(b,{})]})};g.a.render(Object(i.jsx)(j,{}),document.getElementById("root"))}},[[261,1,2]]]);
//# sourceMappingURL=main.6aa2b9ee.chunk.js.map