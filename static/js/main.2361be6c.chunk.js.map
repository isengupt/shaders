{"version":3,"sources":["model/scene.glb","model/11.jpg","Scene.js","shaders/fragment.js","shaders/vertex.js","App.js","index.js"],"names":["params","Scene","props","start","bind","stop","animate","this","scene","THREE","width","mount","clientWidth","height","clientHeight","camera","renderer","setSize","setClearColor","setPixelRatio","window","devicePixelRatio","physicallyCorrectLights","toneMapping","time","position","set","appendChild","domElement","controls","OrbitControls","loader","GLTFLoader","renderpass","RenderPass","bloomPass","UnrealBloomPass","threshold","strength","radius","composer","EffectComposer","addPass","load","model","gltf","console","log","add","y","x","rotateY","Math","PI","rotateX","traverse","o","isMesh","geometry","center","scale","material","addObjects","resize","setupResize","fragmentShader","vertexShader","extensions","derivatives","side","uniforms","type","value","sky","resolution","uvRate","plane","light","addEventListener","offsetWidth","offsetHeight","aspect","imageAspect","updateProjectionMatrix","removeChild","frameId","requestAnimationFrame","cancelAnimationFrame","renderScene","render","style","ref","Component","App","class","href","ReactDOM","document","getElementById"],"mappings":"8QAAe,MAA0B,kCCA1B,MAA0B,+BCanCA,EAEW,IAFXA,EAGY,EAHZA,EAIS,EAiLAC,E,kDA7Kb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,EAAKA,MAAMC,KAAX,gBACb,EAAKC,KAAO,EAAKA,KAAKD,KAAV,gBACZ,EAAKE,QAAU,EAAKA,QAAQF,KAAb,gBALE,E,gEAQE,IAAD,OAClBG,KAAKC,MAAQ,IAAIC,KACjBF,KAAKG,MAAQH,KAAKI,MAAMC,YACxBL,KAAKM,OAASN,KAAKI,MAAMG,aAGzBP,KAAKQ,OAAS,IAAIN,IAChB,GACAF,KAAKG,MAAQH,KAAKM,OAClB,GACA,KAEFN,KAAKS,SAAW,IAAIP,KACpBF,KAAKS,SAASC,QAAQV,KAAKG,MAAOH,KAAKM,QACvCN,KAAKS,SAASE,cAAc,EAAU,GACtCX,KAAKS,SAASG,cAAcC,OAAOC,kBACnCd,KAAKS,SAASM,yBAA0B,EACxCf,KAAKS,SAASO,YAAcd,KAC5BF,KAAKiB,KAAO,EAEZjB,KAAKQ,OAAOU,SAASC,IAAI,EAAG,EAAG,GAC/BnB,KAAKI,MAAMgB,YAAYpB,KAAKS,SAASY,YACrCrB,KAAKsB,SAAW,IAAIC,IAAcvB,KAAKQ,OAAQR,KAAKS,SAASY,YAE7DrB,KAAKwB,OAAS,IAAIC,IAElBzB,KAAK0B,WAAa,IAAIC,IAAY3B,KAAKC,MAAOD,KAAKQ,QAGnDR,KAAK4B,UAAY,IAAIC,IAAiB,IAAI3B,KAAeF,KAAKG,MAAMH,KAAKM,QAAU,IAAK,GAAK,KAC7FN,KAAK4B,UAAUE,UAAYrC,EAC3BO,KAAK4B,UAAUG,SAAWtC,EAC1BO,KAAK4B,UAAUI,OAASvC,EAExBO,KAAKiC,SAAW,IAAIC,IAAgBlC,KAAKS,UACzCT,KAAKiC,SAASE,QAASnC,KAAK0B,YAC5B1B,KAAKiC,SAASE,QAASnC,KAAK4B,WAE5B5B,KAAKwB,OAAOY,KAAKC,GAAO,SAACC,GACvBC,QAAQC,IAAIF,GACZ,EAAKrC,MAAMwC,IAAIH,EAAKrC,OAEpBqC,EAAKrC,MAAMiB,SAASwB,GAAI,IACxBJ,EAAKrC,MAAMiB,SAASyB,EAAI,GAExBL,EAAKrC,MAAM2C,QAAQC,KAAKC,GAAK,IAC7BR,EAAKrC,MAAM8C,QAAQF,KAAKC,GAAK,IAK7BR,EAAKrC,MAAM+C,UAAS,SAACC,GACfA,EAAEC,SACJD,EAAEE,SAASC,SACXH,EAAEI,MAAMlC,IAAI,KAAM,KAAM,MACxB8B,EAAEK,SAAW,EAAKA,SAElBf,QAAQC,IAAIS,UAUlBjD,KAAKuD,aACLvD,KAAKwD,SACLxD,KAAKD,UACLC,KAAKyD,gB,mCAKLzD,KAAKsD,SAAW,IAAIpD,KAAqB,CACvCwD,eCzGa,yiMD0GbC,aE1GW,iSF2GXC,WAAY,CACVC,YAAa,mDAEfC,KAAM5D,IACN6D,SAAU,CACR9C,KAAM,CAAE+C,KAAM,IAAKC,MAAO,GAC1BC,IAAK,CAAEF,KAAM,IAAKC,OAAO,IAAI/D,MAAsBkC,KAAK8B,IACxDC,WAAY,CAAEH,KAAM,KAAMC,MAAO,IAAI/D,MACrCkE,OAAQ,CACNH,MAAO,IAAI/D,KAAc,EAAG,OAKlCF,KAAKmD,SAAW,IAAIjD,IAAoB,EAAG,EAAG,EAAG,GACjDF,KAAKqE,MAAQ,IAAInE,IAAWF,KAAKmD,SAAUnD,KAAKsD,UAGhD,IAAMgB,EAAQ,IAAIpE,IAAoB,SACtCF,KAAKC,MAAMwC,IAAK6B,K,oCAIhBtE,KAAKI,MAAMmE,iBAAiB,SAAUvE,KAAKwD,OAAO3D,KAAKG,S,+BAIvDA,KAAKG,MAAQH,KAAKI,MAAMoE,YACxBxE,KAAKM,OAASN,KAAKI,MAAMqE,aACzBzE,KAAKS,SAASC,QAAQV,KAAKG,MAAOH,KAAKM,QACvCN,KAAKQ,OAAOkE,OAAS1E,KAAKG,MAAQH,KAAKM,OAEvCN,KAAK2E,YAAc,IAAM,KAGrB3E,KAAKM,OAASN,KAAKG,MAAQH,KAAK2E,YAC5B3E,KAAKG,MAAQH,KAAKM,OAAUN,KAAK2E,aAGlC,EACA3E,KAAKM,OAASN,KAAKG,MAAQH,KAAK2E,aAEvC3E,KAAKQ,OAAOoE,2B,6CAIZ5E,KAAKF,OACLE,KAAKI,MAAMyE,YAAY7E,KAAKS,SAASY,c,8BAIhCrB,KAAK8E,UACR9E,KAAK8E,QAAUC,sBAAsB/E,KAAKD,Y,6BAK5CiF,qBAAqBhF,KAAK8E,W,gCAM1B9E,KAAKiB,MAAQ,IAEbjB,KAAKsD,SAASS,SAAS9C,KAAKgD,MAAQjE,KAAKiB,KAEzCjB,KAAK8E,QAAUjE,OAAOkE,sBAAsB/E,KAAKD,QAAQF,KAAKG,OAC9DA,KAAKiF,gB,oCAILjF,KAAKS,SAASyE,OAAOlF,KAAKC,MAAOD,KAAKQ,U,+BAG9B,IAAD,OACP,OACE,qBACE2E,MAAO,CAAEhF,MAAO,QAASG,OAAQ,SACjC8E,IAAK,SAAChF,GACJ,EAAKA,MAAQA,S,GAvKHiF,aGQLC,MAzBf,WACE,OACE,qCACE,sBAAKC,MAAM,QAAX,UACE,oBAAIA,MAAM,eAAV,+BAKA,sBAAKA,MAAM,eAAX,UACE,mBAAGC,KAAK,8CAAR,sBAGA,mBAAGA,KAAK,IAAR,oBACA,mBAAGA,KAAK,qCAAR,0BAMJ,cAAC,EAAD,QClBNC,IAASP,OAAO,cAAC,EAAD,IAASQ,SAASC,eAAe,W","file":"static/js/main.2361be6c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/scene.003cc221.glb\";","export default __webpack_public_path__ + \"static/media/11.fdb5fed8.jpg\";","import React, { Component } from \"react\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport DatGui, { DatNumber } from \"@tim-soft/react-dat-gui\";\nimport { EffectComposer } from \"three/examples/jsm/postprocessing/EffectComposer.js\";\nimport { RenderPass } from \"three/examples/jsm/postprocessing/RenderPass.js\";\nimport { UnrealBloomPass } from \"three/examples/jsm/postprocessing/UnrealBloomPass.js\";\nimport model from \"./model/scene.glb\";\nimport { vertex } from \"./shaders/vertex\";\nimport { fragment } from \"./shaders/fragment\";\nimport sky from \"./model/11.jpg\";\n\nconst params = {\n  exposure: 1,\n  bloomStrength: 1.5,\n  bloomThreshold: 0,\n  bloomRadius: 0\n};\n\nclass Scene extends Component {\n  constructor(props) {\n    super(props);\n\n    this.start = this.start.bind(this);\n    this.stop = this.stop.bind(this);\n    this.animate = this.animate.bind(this);\n  }\n\n  componentDidMount() {\n    this.scene = new THREE.Scene();\n    this.width = this.mount.clientWidth;\n    this.height = this.mount.clientHeight;\n\n\n    this.camera = new THREE.PerspectiveCamera(\n      45,\n      this.width / this.height,\n      0.1,\n      1000\n    );\n    this.renderer = new THREE.WebGLRenderer();\n    this.renderer.setSize(this.width, this.height);\n    this.renderer.setClearColor(0x000000, 1);\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.physicallyCorrectLights = true;\n    this.renderer.toneMapping = THREE.ReinhardToneMapping;\n    this.time = 0;\n\n    this.camera.position.set(0, 0, 7);\n    this.mount.appendChild(this.renderer.domElement);\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n\n    this.loader = new GLTFLoader();\n\n    this.renderpass = new RenderPass( this.scene, this.camera );\n\n \n    this.bloomPass = new UnrealBloomPass( new THREE.Vector2( this.width,this.height ), 1.5, 0.4, 0.85 );\n    this.bloomPass.threshold = params.bloomThreshold;\n    this.bloomPass.strength = params.bloomStrength;\n    this.bloomPass.radius = params.bloomRadius;\n\n    this.composer = new EffectComposer( this.renderer );\n    this.composer.addPass( this.renderpass );\n    this.composer.addPass( this.bloomPass );\n \n    this.loader.load(model, (gltf) => {\n      console.log(gltf);\n      this.scene.add(gltf.scene);\n   \n      gltf.scene.position.y =-2.5\n      gltf.scene.position.x = 0.5\n\n      gltf.scene.rotateY(Math.PI / 12);\n      gltf.scene.rotateX(Math.PI / 12)\n      //gltf.scene.rotateX(Math.PI / 4);\n      /*       \n      gltf.scene.rotateY(0.55)\n      gltf.scene.rotateZ(-0.1) */\n      gltf.scene.traverse((o) => {\n        if (o.isMesh) {\n          o.geometry.center();\n          o.scale.set(1.25, 1.25, 1.25);\n          o.material = this.material;\n\n          console.log(o);\n        }\n      });\n    });\n\n    /*  this.scene = scene\n    this.camera = camera\n    this.renderer = renderer\n    this.material = material\n    this.cube = cube */\n    this.addObjects();\n    this.resize();\n    this.animate();\n    this.setupResize();\n  }\n\n  addObjects() {\n    let that = this;\n    this.material = new THREE.ShaderMaterial({\n      fragmentShader: fragment,\n      vertexShader: vertex,\n      extensions: {\n        derivatives: \"#extension GL_OES_standard_derivatives : enable\",\n      },\n      side: THREE.DoubleSide,\n      uniforms: {\n        time: { type: \"f\", value: 0 },\n        sky: { type: \"f\", value: new THREE.TextureLoader().load(sky) },\n        resolution: { type: \"v4\", value: new THREE.Vector4() },\n        uvRate: {\n          value: new THREE.Vector2(1, 1),\n        },\n      },\n    });\n\n    this.geometry = new THREE.PlaneGeometry(1, 1, 1, 1);\n    this.plane = new THREE.Mesh(this.geometry, this.material);\n\n    //this.scene.add(this.plane);\n    const light = new THREE.AmbientLight( 0x404040 );\n    this.scene.add( light );\n  }\n\n  setupResize() {\n    this.mount.addEventListener(\"resize\", this.resize.bind(this));\n  }\n\n  resize() {\n    this.width = this.mount.offsetWidth;\n    this.height = this.mount.offsetHeight;\n    this.renderer.setSize(this.width, this.height);\n    this.camera.aspect = this.width / this.height;\n\n    this.imageAspect = 853 / 1280;\n    let a1;\n    let a2;\n    if (this.height / this.width > this.imageAspect) {\n      a1 = (this.width / this.height) * this.imageAspect;\n      a1 = 1;\n    } else {\n      a1 = 1;\n      a2 = this.height / this.width / this.imageAspect;\n    }\n    this.camera.updateProjectionMatrix();\n  }\n\n  componentWillUnmount() {\n    this.stop();\n    this.mount.removeChild(this.renderer.domElement);\n  }\n\n  start() {\n    if (!this.frameId) {\n      this.frameId = requestAnimationFrame(this.animate);\n    }\n  }\n\n  stop() {\n    cancelAnimationFrame(this.frameId);\n  }\n\n  animate() {\n    //this.cube.rotation.x += 0.01\n    //this.cube.rotation.y += 0.01\n    this.time += 0.05;\n    //console.log(this.time)\n    this.material.uniforms.time.value = this.time;\n\n    this.frameId = window.requestAnimationFrame(this.animate.bind(this));\n    this.renderScene();\n  }\n\n  renderScene() {\n    this.renderer.render(this.scene, this.camera);\n  }\n\n  render() {\n    return (\n      <div\n        style={{ width: \"100vw\", height: \"100vh\" }}\n        ref={(mount) => {\n          this.mount = mount;\n        }}\n      />\n    );\n  }\n}\n\nexport default Scene;\n","export var fragment = `\n\nuniform float time;\nuniform float progress;\nuniform sampler2D sky;\nuniform vec4 resolution;\nvarying vec2 vUv;\nvarying vec3 vPosition;\nvarying vec3 vNormal;\nfloat PI = 3.14159265358979;\n\n\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\nvec4 fade(vec4 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\n\n// Classic Perlin noise, periodic version\nfloat cnoise(vec4 P, vec4 rep){\n  vec4 Pi0 = mod(floor(P), rep); // Integer part modulo rep\n  vec4 Pi1 = mod(Pi0 + 1.0, rep); // Integer part + 1 mod rep\n  vec4 Pf0 = fract(P); // Fractional part for interpolation\n  vec4 Pf1 = Pf0 - 1.0; // Fractional part - 1.0\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = vec4(Pi0.zzzz);\n  vec4 iz1 = vec4(Pi1.zzzz);\n  vec4 iw0 = vec4(Pi0.wwww);\n  vec4 iw1 = vec4(Pi1.wwww);\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n  vec4 ixy00 = permute(ixy0 + iw0);\n  vec4 ixy01 = permute(ixy0 + iw1);\n  vec4 ixy10 = permute(ixy1 + iw0);\n  vec4 ixy11 = permute(ixy1 + iw1);\n\n  vec4 gx00 = ixy00 / 7.0;\n  vec4 gy00 = floor(gx00) / 7.0;\n  vec4 gz00 = floor(gy00) / 6.0;\n  gx00 = fract(gx00) - 0.5;\n  gy00 = fract(gy00) - 0.5;\n  gz00 = fract(gz00) - 0.5;\n  vec4 gw00 = vec4(0.75) - abs(gx00) - abs(gy00) - abs(gz00);\n  vec4 sw00 = step(gw00, vec4(0.0));\n  gx00 -= sw00 * (step(0.0, gx00) - 0.5);\n  gy00 -= sw00 * (step(0.0, gy00) - 0.5);\n\n  vec4 gx01 = ixy01 / 7.0;\n  vec4 gy01 = floor(gx01) / 7.0;\n  vec4 gz01 = floor(gy01) / 6.0;\n  gx01 = fract(gx01) - 0.5;\n  gy01 = fract(gy01) - 0.5;\n  gz01 = fract(gz01) - 0.5;\n  vec4 gw01 = vec4(0.75) - abs(gx01) - abs(gy01) - abs(gz01);\n  vec4 sw01 = step(gw01, vec4(0.0));\n  gx01 -= sw01 * (step(0.0, gx01) - 0.5);\n  gy01 -= sw01 * (step(0.0, gy01) - 0.5);\n\n  vec4 gx10 = ixy10 / 7.0;\n  vec4 gy10 = floor(gx10) / 7.0;\n  vec4 gz10 = floor(gy10) / 6.0;\n  gx10 = fract(gx10) - 0.5;\n  gy10 = fract(gy10) - 0.5;\n  gz10 = fract(gz10) - 0.5;\n  vec4 gw10 = vec4(0.75) - abs(gx10) - abs(gy10) - abs(gz10);\n  vec4 sw10 = step(gw10, vec4(0.0));\n  gx10 -= sw10 * (step(0.0, gx10) - 0.5);\n  gy10 -= sw10 * (step(0.0, gy10) - 0.5);\n\n  vec4 gx11 = ixy11 / 7.0;\n  vec4 gy11 = floor(gx11) / 7.0;\n  vec4 gz11 = floor(gy11) / 6.0;\n  gx11 = fract(gx11) - 0.5;\n  gy11 = fract(gy11) - 0.5;\n  gz11 = fract(gz11) - 0.5;\n  vec4 gw11 = vec4(0.75) - abs(gx11) - abs(gy11) - abs(gz11);\n  vec4 sw11 = step(gw11, vec4(0.0));\n  gx11 -= sw11 * (step(0.0, gx11) - 0.5);\n  gy11 -= sw11 * (step(0.0, gy11) - 0.5);\n\n  vec4 g0000 = vec4(gx00.x,gy00.x,gz00.x,gw00.x);\n  vec4 g1000 = vec4(gx00.y,gy00.y,gz00.y,gw00.y);\n  vec4 g0100 = vec4(gx00.z,gy00.z,gz00.z,gw00.z);\n  vec4 g1100 = vec4(gx00.w,gy00.w,gz00.w,gw00.w);\n  vec4 g0010 = vec4(gx10.x,gy10.x,gz10.x,gw10.x);\n  vec4 g1010 = vec4(gx10.y,gy10.y,gz10.y,gw10.y);\n  vec4 g0110 = vec4(gx10.z,gy10.z,gz10.z,gw10.z);\n  vec4 g1110 = vec4(gx10.w,gy10.w,gz10.w,gw10.w);\n  vec4 g0001 = vec4(gx01.x,gy01.x,gz01.x,gw01.x);\n  vec4 g1001 = vec4(gx01.y,gy01.y,gz01.y,gw01.y);\n  vec4 g0101 = vec4(gx01.z,gy01.z,gz01.z,gw01.z);\n  vec4 g1101 = vec4(gx01.w,gy01.w,gz01.w,gw01.w);\n  vec4 g0011 = vec4(gx11.x,gy11.x,gz11.x,gw11.x);\n  vec4 g1011 = vec4(gx11.y,gy11.y,gz11.y,gw11.y);\n  vec4 g0111 = vec4(gx11.z,gy11.z,gz11.z,gw11.z);\n  vec4 g1111 = vec4(gx11.w,gy11.w,gz11.w,gw11.w);\n\n  vec4 norm00 = taylorInvSqrt(vec4(dot(g0000, g0000), dot(g0100, g0100), dot(g1000, g1000), dot(g1100, g1100)));\n  g0000 *= norm00.x;\n  g0100 *= norm00.y;\n  g1000 *= norm00.z;\n  g1100 *= norm00.w;\n\n  vec4 norm01 = taylorInvSqrt(vec4(dot(g0001, g0001), dot(g0101, g0101), dot(g1001, g1001), dot(g1101, g1101)));\n  g0001 *= norm01.x;\n  g0101 *= norm01.y;\n  g1001 *= norm01.z;\n  g1101 *= norm01.w;\n\n  vec4 norm10 = taylorInvSqrt(vec4(dot(g0010, g0010), dot(g0110, g0110), dot(g1010, g1010), dot(g1110, g1110)));\n  g0010 *= norm10.x;\n  g0110 *= norm10.y;\n  g1010 *= norm10.z;\n  g1110 *= norm10.w;\n\n  vec4 norm11 = taylorInvSqrt(vec4(dot(g0011, g0011), dot(g0111, g0111), dot(g1011, g1011), dot(g1111, g1111)));\n  g0011 *= norm11.x;\n  g0111 *= norm11.y;\n  g1011 *= norm11.z;\n  g1111 *= norm11.w;\n\n  float n0000 = dot(g0000, Pf0);\n  float n1000 = dot(g1000, vec4(Pf1.x, Pf0.yzw));\n  float n0100 = dot(g0100, vec4(Pf0.x, Pf1.y, Pf0.zw));\n  float n1100 = dot(g1100, vec4(Pf1.xy, Pf0.zw));\n  float n0010 = dot(g0010, vec4(Pf0.xy, Pf1.z, Pf0.w));\n  float n1010 = dot(g1010, vec4(Pf1.x, Pf0.y, Pf1.z, Pf0.w));\n  float n0110 = dot(g0110, vec4(Pf0.x, Pf1.yz, Pf0.w));\n  float n1110 = dot(g1110, vec4(Pf1.xyz, Pf0.w));\n  float n0001 = dot(g0001, vec4(Pf0.xyz, Pf1.w));\n  float n1001 = dot(g1001, vec4(Pf1.x, Pf0.yz, Pf1.w));\n  float n0101 = dot(g0101, vec4(Pf0.x, Pf1.y, Pf0.z, Pf1.w));\n  float n1101 = dot(g1101, vec4(Pf1.xy, Pf0.z, Pf1.w));\n  float n0011 = dot(g0011, vec4(Pf0.xy, Pf1.zw));\n  float n1011 = dot(g1011, vec4(Pf1.x, Pf0.y, Pf1.zw));\n  float n0111 = dot(g0111, vec4(Pf0.x, Pf1.yzw));\n  float n1111 = dot(g1111, Pf1);\n\n  vec4 fade_xyzw = fade(Pf0);\n  vec4 n_0w = mix(vec4(n0000, n1000, n0100, n1100), vec4(n0001, n1001, n0101, n1101), fade_xyzw.w);\n  vec4 n_1w = mix(vec4(n0010, n1010, n0110, n1110), vec4(n0011, n1011, n0111, n1111), fade_xyzw.w);\n  vec4 n_zw = mix(n_0w, n_1w, fade_xyzw.z);\n  vec2 n_yzw = mix(n_zw.xy, n_zw.zw, fade_xyzw.y);\n  float n_xyzw = mix(n_yzw.x, n_yzw.y, fade_xyzw.x);\n  return 2.2 * n_xyzw;\n}\n\nvoid main()\t{\n    \n    float diff = dot(vec3(1.), vNormal);\n\n    float phi = acos(vNormal.y);\n\n    float angle = atan(vNormal.x, vNormal.z);\n\n    vec2 newFakeUV = vec2((angle * PI) / (2. * PI), phi/PI);\n    \n\n    float fresnel = abs(dot(cameraPosition, vNormal));\n    fresnel = fresnel * fresnel ;\n    vec2 fakeUV = vec2(dot(vec3(1), vNormal),dot(vec3(-1.,0.,1.), vNormal));\n    \n    fakeUV = fract(fakeUV + vec2(time/40., time/2.));\n   \n    vec4 txt = texture2D(sky,newFakeUV + 0.2*cnoise(vec4(fakeUV*5., time/100.,0.), vec4(5.)));\n\n    gl_FragColor = vec4(mix(vec3(1.),txt.rgb,fresnel),1.);\n   \n    \n\n}\n`;\n","export var vertex = `\n\nuniform float time;\nvarying vec2 vUv;\nvarying vec3 vPosition;\nvarying vec3 vNormal;\nuniform vec2 pixels;\n\nfloat PI = 3.141592653589793238;\n\n\nvoid main()\t{\n    vUv = uv;\nvNormal = normal;\n   gl_Position = projectionMatrix * modelViewMatrix * vec4 (position, 1.0);\n\n}\n`","import \"./styles.css\";\nimport Scene from \"./Scene\";\n\nfunction App() {\n  return (\n    <>\n      <div class=\"frame\">\n        <h1 class=\"frame__title\">\n          WEBGL Neon Shader\n          \n        </h1>\n      \n        <div class=\"frame__links\">\n          <a href=\"https://isengupt.github.io/full-distortion/\">\n            Previous\n          </a>\n          <a href=\"#\">Resume</a>\n          <a href=\"https://github.com/isengupt/shader\">\n            GitHub\n          </a>\n        </div>\n      </div>\n\n      <Scene />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}